{"ast":null,"code":"var _jsxFileName = \"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/DisplayData.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DisplayData(props) {\n  if (props.data.availableCategories) {\n    let categoryList = props.data.availableCategories.map(category => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: props.clickCategoryCard,\n        children: category.id\n      }, category.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 21\n      }, this);\n    });\n    let artistList = props.data.featuredArtists.map((artist, index) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: () => props.clickArtist(index),\n        className: props.data.checkedArtists[index] ? \"checked\" : null,\n        children: artist\n      }, artist, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.data.currentUser && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hello \", props.data.currentUser, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 40\n    }, this), props.data.selectedCategory ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [props.data.selectedCategory, \" Artists:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }, this) : categoryList, props.data.checkedArtists.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.submitSelectedArtist,\n      children: \"Generate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 54\n    }, this), props.data.featuredArtists ? props.data.artistList : 'No artists yet']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_c = DisplayData;\nexport default DisplayData;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"sources":["/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/DisplayData.js"],"names":["React","DisplayData","props","data","availableCategories","categoryList","map","category","clickCategoryCard","id","artistList","featuredArtists","artist","index","clickArtist","checkedArtists","currentUser","selectedCategory","length","submitSelectedArtist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAExB,MAAIA,KAAK,CAACC,IAAN,CAAWC,mBAAf,EAAoC;AAChC,QAAIC,YAAY,GAAGH,KAAK,CAACC,IAAN,CAAWC,mBAAX,CAA+BE,GAA/B,CAAoCC,QAAD,IAAc;AAChE,0BAAQ;AAAqB,QAAA,OAAO,EAAEL,KAAK,CAACM,iBAApC;AAAA,kBAAwDD,QAAQ,CAACE;AAAjE,SAAQF,QAAQ,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFkB,CAAnB;AAIA,QAAIC,UAAU,GAAGR,KAAK,CAACC,IAAN,CAAWQ,eAAX,CAA2BL,GAA3B,CAA+B,CAACM,MAAD,EAASC,KAAT,KAAmB;AAC/D,0BAAQ;AAAgB,QAAA,OAAO,EAAE,MAAMX,KAAK,CAACY,WAAN,CAAkBD,KAAlB,CAA/B;AAAyD,QAAA,SAAS,EAAEX,KAAK,CAACC,IAAN,CAAWY,cAAX,CAA0BF,KAA1B,IAAmC,SAAnC,GAA+C,IAAnH;AAAA,kBAA0HD;AAA1H,SAAQA,MAAR;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFgB,CAAjB;AAGH;;AAED,sBACI;AAAA,eACKV,KAAK,CAACC,IAAN,CAAWa,WAAX,iBAA0B;AAAA,2BAAUd,KAAK,CAACC,IAAN,CAAWa,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAD/B,EAGKd,KAAK,CAACC,IAAN,CAAWc,gBAAX,gBACK;AAAA,iBAAIf,KAAK,CAACC,IAAN,CAAWc,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,GAEKZ,YALV,EAQKH,KAAK,CAACC,IAAN,CAAWY,cAAX,CAA0BG,MAA1B,GAAmC,CAAnC,iBAAwC;AAAQ,MAAA,OAAO,EAAEhB,KAAK,CAACiB,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAR7C,EAUKjB,KAAK,CAACC,IAAN,CAAWQ,eAAX,GACKT,KAAK,CAACC,IAAN,CAAWO,UADhB,GAEK,gBAZV;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;KA7BQT,W;AA+BT,eAAeA,WAAf","sourcesContent":["import React from \"react\"\n\nfunction DisplayData(props) {\n\n    if (props.data.availableCategories) {\n        let categoryList = props.data.availableCategories.map((category) => {\n            return (<p key={category.id} onClick={props.clickCategoryCard}>{category.id}</p>)\n        })\n\n        let artistList = props.data.featuredArtists.map((artist, index) => {\n            return (<p key={artist} onClick={() => props.clickArtist(index)} className={props.data.checkedArtists[index] ? \"checked\" : null}>{artist}</p>)\n        })\n    }\n\n    return (\n        <div>\n            {props.data.currentUser && <p>Hello {props.data.currentUser}!</p>}\n\n            {props.data.selectedCategory\n                ? <p>{props.data.selectedCategory} Artists:</p>\n                : categoryList\n            }\n\n            {props.data.checkedArtists.length > 0 && <button onClick={props.submitSelectedArtist}>Generate</button>}\n\n            {props.data.featuredArtists\n                ? props.data.artistList\n                : 'No artists yet'\n            }\n        </div>\n    )\n}\n\nexport default DisplayData\n"]},"metadata":{},"sourceType":"module"}