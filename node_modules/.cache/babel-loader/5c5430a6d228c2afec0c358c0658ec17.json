{"ast":null,"code":"export default function parseCallback(link){// Hard-coded 60 assuming the token is long\nif(typeof link==\"string\"&&link.length>60){// Chop off text before/after the access_token\nvar accessToken=link.split('#',2)[1].split('=')[1].split('&')[0];return accessToken;}}","map":{"version":3,"sources":["/Users/notspencer/Downloads/client/src/components/parseCallback.js"],"names":["parseCallback","link","length","accessToken","split"],"mappings":"AAAA,cAAe,SAASA,CAAAA,aAAT,CAAuBC,IAAvB,CAA6B,CACxC;AACA,GAAI,MAAOA,CAAAA,IAAP,EAAe,QAAf,EAA2BA,IAAI,CAACC,MAAL,CAAc,EAA7C,CAAiD,CAC7C;AACA,GAAIC,CAAAA,WAAW,CAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBA,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,EAAoCA,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAlB,CAEA,MAAOD,CAAAA,WAAP,CACH,CACJ","sourcesContent":["export default function parseCallback(link) {\n    // Hard-coded 60 assuming the token is long\n    if (typeof link == \"string\" && link.length > 60) {\n        // Chop off text before/after the access_token\n        let accessToken = link.split('#', 2)[1].split('=')[1].split('&')[0]\n\n        return accessToken\n    }\n}"]},"metadata":{},"sourceType":"module"}