{"ast":null,"code":"var _jsxFileName = \"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/SpotifyData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport LoginButton from \"./LoginButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyWebApi = new SpotifyWebApi();\n\nfunction SpotifyData() {\n  _s();\n\n  let [token, setToken] = useState(false);\n  let [currentUser, setCurrentUser] = useState();\n  let [availableCategories, setAvailableCategories] = useState([]);\n  let [selectedCategory, setSelectedCategory] = useState(\"\");\n\n  function getMe() {\n    spotifyWebApi.getMe().then(response => {\n      if (response) {\n        setCurrentUser(response.display_name);\n      }\n    });\n  }\n\n  function getCategories() {\n    spotifyWebApi.getCategories().then(response => {\n      if (response) {\n        setAvailableCategories(response.categories.items);\n      }\n    });\n  }\n\n  function getCategory(id) {\n    spotifyWebApi.getCategory(id).then(response => {\n      setSelectedCategory(response.name);\n    });\n  }\n\n  function saveToken(token) {\n    spotifyWebApi.setAccessToken(token);\n    setToken(token);\n  }\n\n  function clickCard(event) {\n    getCategory(event.target.innerText);\n  }\n\n  useEffect(() => {\n    console.log(selectedCategory);\n  }, [selectedCategory]);\n  useEffect(() => {\n    if (token) {\n      getMe();\n      getCategories();\n      return;\n    }\n  }, [token]);\n  let categoryList = availableCategories.map(category => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      onClick: clickCard,\n      children: category.id\n    }, category.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!token && /*#__PURE__*/_jsxDEV(LoginButton, {\n      saveToken: saveToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }, this), currentUser && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hello \", currentUser, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }, this), !selectedCategory ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected: \", selectedCategory]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : categoryList]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SpotifyData, \"uM87+g+3JTbovHRM263L9zJolIQ=\");\n\n_c = SpotifyData;\nexport default SpotifyData;\n\nvar _c;\n\n$RefreshReg$(_c, \"SpotifyData\");","map":{"version":3,"sources":["/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/SpotifyData.js"],"names":["React","useState","useEffect","SpotifyWebApi","LoginButton","spotifyWebApi","SpotifyData","token","setToken","currentUser","setCurrentUser","availableCategories","setAvailableCategories","selectedCategory","setSelectedCategory","getMe","then","response","display_name","getCategories","categories","items","getCategory","id","name","saveToken","setAccessToken","clickCard","event","target","innerText","console","log","categoryList","map","category"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,aAAa,GAAG,IAAIF,aAAJ,EAAtB;;AAEA,SAASG,WAAT,GAAuB;AAAA;;AACnB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAhC;AACA,MAAI,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,EAA5C;AACA,MAAI,CAACU,mBAAD,EAAsBC,sBAAtB,IAAgDX,QAAQ,CAAC,EAAD,CAA5D;AACA,MAAI,CAACY,gBAAD,EAAmBC,mBAAnB,IAA0Cb,QAAQ,CAAC,EAAD,CAAtD;;AAEA,WAASc,KAAT,GAAiB;AACbV,IAAAA,aAAa,CAACU,KAAd,GACKC,IADL,CACWC,QAAD,IAAc;AAChB,UAAIA,QAAJ,EAAc;AACVP,QAAAA,cAAc,CAACO,QAAQ,CAACC,YAAV,CAAd;AACH;AACR,KALD;AAMH;;AAED,WAASC,aAAT,GAAyB;AACrBd,IAAAA,aAAa,CAACc,aAAd,GACKH,IADL,CACWC,QAAD,IAAc;AAChB,UAAIA,QAAJ,EAAc;AACVL,QAAAA,sBAAsB,CAACK,QAAQ,CAACG,UAAT,CAAoBC,KAArB,CAAtB;AACH;AACR,KALD;AAMH;;AAED,WAASC,WAAT,CAAqBC,EAArB,EAAyB;AACrBlB,IAAAA,aAAa,CAACiB,WAAd,CAA0BC,EAA1B,EACKP,IADL,CACWC,QAAD,IAAc;AAChBH,MAAAA,mBAAmB,CAACG,QAAQ,CAACO,IAAV,CAAnB;AACP,KAHD;AAIH;;AAED,WAASC,SAAT,CAAmBlB,KAAnB,EAA0B;AACtBF,IAAAA,aAAa,CAACqB,cAAd,CAA6BnB,KAA7B;AACAC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH;;AAED,WAASoB,SAAT,CAAmBC,KAAnB,EAA0B;AACtBN,IAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,SAAd,CAAX;AACH;;AAED5B,EAAAA,SAAS,CAAC,MAAM;AACZ6B,IAAAA,OAAO,CAACC,GAAR,CAAYnB,gBAAZ;AACH,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAJ,EAAW;AACPQ,MAAAA,KAAK;AACLI,MAAAA,aAAa;AACb;AACH;AACJ,GANQ,EAMN,CAACZ,KAAD,CANM,CAAT;AAQA,MAAI0B,YAAY,GAAGtB,mBAAmB,CAACuB,GAApB,CAAyBC,QAAD,IAAc;AACrD,wBAAQ;AAAqB,MAAA,OAAO,EAAER,SAA9B;AAAA,gBAA0CQ,QAAQ,CAACZ;AAAnD,OAAQY,QAAQ,CAACZ,EAAjB;AAAA;AAAA;AAAA;AAAA,YAAR;AACH,GAFkB,CAAnB;AAIA,sBACI;AAAA,eACK,CAAChB,KAAD,iBAAU,QAAC,WAAD;AAAa,MAAA,SAAS,EAAEkB;AAAxB;AAAA;AAAA;AAAA;AAAA,YADf,EAEKhB,WAAW,iBAAI;AAAA,2BAAUA,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFpB,EAIK,CAACI,gBAAD,gBAEG;AAAA,+BAAcA,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH,GAIGoB,YARR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAtEQ3B,W;;KAAAA,W;AAwET,eAAeA,WAAf","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport SpotifyWebApi from \"spotify-web-api-js\"\nimport LoginButton from \"./LoginButton\"\n\nconst spotifyWebApi = new SpotifyWebApi();\n\nfunction SpotifyData() {\n    let [token, setToken] = useState(false) \n    let [currentUser, setCurrentUser] = useState()\n    let [availableCategories, setAvailableCategories] = useState([])\n    let [selectedCategory, setSelectedCategory] = useState(\"\")\n\n    function getMe() {\n        spotifyWebApi.getMe()\n            .then((response) => {\n                if (response) {\n                    setCurrentUser(response.display_name)\n                } \n        });\n    }\n\n    function getCategories() {\n        spotifyWebApi.getCategories()\n            .then((response) => {\n                if (response) {\n                    setAvailableCategories(response.categories.items)\n                } \n        });\n    }\n    \n    function getCategory(id) {\n        spotifyWebApi.getCategory(id)\n            .then((response) => {\n                setSelectedCategory(response.name);\n        });\n    }\n\n    function saveToken(token) {\n        spotifyWebApi.setAccessToken(token);\n        setToken(token);\n    }\n\n    function clickCard(event) {\n        getCategory(event.target.innerText)\n    }\n\n    useEffect(() => {\n        console.log(selectedCategory)\n    }, [selectedCategory])\n\n    useEffect(() => {\n        if (token) {\n            getMe()\n            getCategories()\n            return\n        }\n    }, [token])\n\n    let categoryList = availableCategories.map((category) => {\n        return (<p key={category.id} onClick={clickCard}>{category.id}</p>)\n    })\n\n    return (\n        <div>\n            {!token && <LoginButton saveToken={saveToken} />}\n            {currentUser && <p>Hello {currentUser}!</p>}\n\n            {!selectedCategory\n                ?\n                <p>Selected: {selectedCategory}</p>\n                :\n                categoryList\n            }\n\n        </div>\n    )\n}\n\nexport default SpotifyData\n"]},"metadata":{},"sourceType":"module"}