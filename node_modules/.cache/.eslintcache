[{"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/index.js":"1","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/App.js":"2","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/reportWebVitals.js":"3","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/Header.js":"4","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/SpotifyData.js":"5","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/Footer.js":"6","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/LoginButton.js":"7","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/parseCallback.js":"8","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/DisplayData.js":"9","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/ArtistSelection.js":"10","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/CategorySelection.js":"11","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/UserPlaylist.js":"12","/Users/notspencer/Documents/React Practice/client/src/index.js":"13","/Users/notspencer/Documents/React Practice/client/src/App.js":"14","/Users/notspencer/Documents/React Practice/client/src/reportWebVitals.js":"15","/Users/notspencer/Documents/React Practice/client/src/components/Header.js":"16","/Users/notspencer/Documents/React Practice/client/src/components/Footer.js":"17","/Users/notspencer/Documents/React Practice/client/src/components/LoginButton.js":"18","/Users/notspencer/Documents/React Practice/client/src/components/UserPlaylist.js":"19","/Users/notspencer/Documents/React Practice/client/src/components/parseCallback.js":"20","/Users/notspencer/Documents/React Practice/client/src/components/CardList.js":"21","/Users/notspencer/Documents/React Practice/client/src/components/UserWelcome.js":"22","/Users/notspencer/Documents/React Practice/client/src/components/UserConnected.js":"23","/Users/notspencer/Documents/React Practice/client/src/components/SpotifyDataContainer.js":"24","/Users/notspencer/Documents/React Practice/client/src/components/SpotifyDataComponent.js":"25"},{"size":500,"mtime":1613574420659,"results":"26","hashOfConfig":"27"},{"size":311,"mtime":1613595650289,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1613574420659,"results":"29","hashOfConfig":"27"},{"size":242,"mtime":1613595661988,"results":"30","hashOfConfig":"27"},{"size":6231,"mtime":1613849132195,"results":"31","hashOfConfig":"27"},{"size":756,"mtime":1613578108389,"results":"32","hashOfConfig":"27"},{"size":812,"mtime":1613757757534,"results":"33","hashOfConfig":"27"},{"size":315,"mtime":1613574420659,"results":"34","hashOfConfig":"27"},{"size":1854,"mtime":1613848899302,"results":"35","hashOfConfig":"27"},{"size":752,"mtime":1613765099221,"results":"36","hashOfConfig":"27"},{"size":402,"mtime":1613767362984,"results":"37","hashOfConfig":"27"},{"size":164,"mtime":1613849037809,"results":"38","hashOfConfig":"27"},{"size":500,"mtime":1613574420659,"results":"39","hashOfConfig":"40"},{"size":436,"mtime":1614197347740,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":1613574420659,"results":"42","hashOfConfig":"40"},{"size":206,"mtime":1614205824030,"results":"43","hashOfConfig":"40"},{"size":777,"mtime":1614205987102,"results":"44","hashOfConfig":"40"},{"size":1675,"mtime":1614206481115,"results":"45","hashOfConfig":"40"},{"size":801,"mtime":1614206781497,"results":"46","hashOfConfig":"40"},{"size":315,"mtime":1613574420659,"results":"47","hashOfConfig":"40"},{"size":175,"mtime":1614196376513,"results":"48","hashOfConfig":"40"},{"size":302,"mtime":1613920218430,"results":"49","hashOfConfig":"40"},{"size":430,"mtime":1614195374838,"results":"50","hashOfConfig":"40"},{"size":7919,"mtime":1614206679121,"results":"51","hashOfConfig":"40"},{"size":2603,"mtime":1614207164559,"results":"52","hashOfConfig":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"17mpzf8",{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"ycedgp",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/index.js",[],["110","111"],"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/App.js",["112"],"import './App.css';\nimport Header from \"./components/Header\"\nimport SpotifyData from \"./components/SpotifyData\"\nimport Footer from \"./components/Footer\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Header /> */}\n      <SpotifyData />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/reportWebVitals.js",[],"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/Header.js",[],"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/SpotifyData.js",["113","114"],"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/Footer.js",["115","116","117"],"import React from \"react\"\n\nfunction Footer() {\n    return (\n        <footer>\n            <div className=\"footerLinks\">\n                <a href=\"https://github.com/spencerlepine/spotify-top-five\" target=\"_blank\">\n                    <img src=\"http://csis.pace.edu/~scharff/pacemobilelab/images/github.jpg\" alt=\"GitHub Logo\"></img>\n                </a>\n                <p>Created by <a target=\"_blank\" href=\"https://twitter.com/SpencerLepine\">@SpencerLepine</a>  </p>\n                <a href=\"https://twitter.com/SpencerLepine\" target=\"_blank\">\n                <img src=\"https://logodownload.org/wp-content/uploads/2014/09/twitter-logo-1-1.png\" alt=\"GitHub Logo\"></img>\n                </a>\n            </div>\n        </footer>\n    )\n}\n\nexport default Footer","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/LoginButton.js",["118"],"import React, {useState, useEffect} from \"react\"\nimport parseCallBack from \"./parseCallback\"\n\nfunction LoginButton(props) {\n    const [promptLogin, setPromptLogin] = useState(true);\n\n    useEffect(() => {\n        const validToken = parseCallBack(window.location.href);\n\n        if (validToken) {\n            props.saveToken(validToken)\n            window.location.hash = '' // App will rerender with just .location\n        } else {\n            setPromptLogin(true);\n        }\n    }, [])\n\n    function connectSpotify() {\n        const backtrackLink = 'http://localhost:8888'\n        window.location = backtrackLink;\n    }\n\n    return (\n        <div className=\"accountStatus\">\n            {promptLogin && <button onClick={connectSpotify}>Connect Account</button>}\n        </div>\n    )\n}\n\nexport default LoginButton","/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/parseCallback.js",[],"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/DisplayData.js",[],"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/ArtistSelection.js",[],"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/CategorySelection.js",[],"/Users/notspencer/Documents/React Practice/spotify-top-five/client/src/components/UserPlaylist.js",[],"/Users/notspencer/Documents/React Practice/client/src/index.js",[],["119","120"],"/Users/notspencer/Documents/React Practice/client/src/App.js",[],"/Users/notspencer/Documents/React Practice/client/src/reportWebVitals.js",[],"/Users/notspencer/Documents/React Practice/client/src/components/Header.js",[],"/Users/notspencer/Documents/React Practice/client/src/components/Footer.js",[],"/Users/notspencer/Documents/React Practice/client/src/components/LoginButton.js",["121"],"import React, {useState, useEffect} from \"react\"\nimport parseCallBack from \"./parseCallback\"\nimport UserWelcome from \"./UserWelcome\"\n\nfunction LoginButton(props) {\n    const [promptLogin, setPromptLogin] = useState(true);\n\n    useEffect(() => {\n        const validToken = parseCallBack(window.location.href);\n\n        if (validToken) {\n            props.saveToken(validToken)\n            window.location.hash = '' // App will rerender with just .location\n        } else {\n            setPromptLogin(true);\n        }\n    }, [])\n\n    function connectSpotify() {\n        //var stateKey = 'spotify_auth_state';\n\n        const client_id = '0d539539a02d47a8842d93141f6b6984'; \n        const redirect_uri = window.location + 'callback'; \n\n        //var state = generateRandomString(16);\n        //localStorage.setItem(stateKey, state);\n\n        // https://developer.spotify.com/documentation/general/guides/scopes/\n        var scope = 'user-read-private user-read-email user-read-playback-state playlist-modify-public playlist-modify-private';\n\n        var url = 'https://accounts.spotify.com/authorize';\n        url += '?response_type=token';\n        url += '&client_id=' + encodeURIComponent(client_id);\n        url += '&scope=' + encodeURIComponent(scope);\n        url += '&redirect_uri=' + encodeURIComponent(redirect_uri);\n        //url += '&state=' + encodeURIComponent(state);\n\n        window.location = url;\n    }\n\n    return (\n        <div className=\"accountStatus\">\n            {promptLogin && (<>\n                <UserWelcome />\n                <button onClick={connectSpotify}>Connect Account</button>\n            </>)}\n        </div>\n    )\n}\n\nexport default LoginButton","/Users/notspencer/Documents/React Practice/client/src/components/UserPlaylist.js",[],"/Users/notspencer/Documents/React Practice/client/src/components/parseCallback.js",[],"/Users/notspencer/Documents/React Practice/client/src/components/CardList.js",[],"/Users/notspencer/Documents/React Practice/client/src/components/UserWelcome.js",[],"/Users/notspencer/Documents/React Practice/client/src/components/UserConnected.js",[],"/Users/notspencer/Documents/React Practice/client/src/components/SpotifyDataContainer.js",["122","123","124"],"import React, {useState, useEffect} from \"react\"\nimport SpotifyWebApi from \"spotify-web-api-js\"\nimport LoginButton from \"./LoginButton\"\nimport SpotifyDataComponent from \"./SpotifyDataComponent\"\nimport UserPlaylist from \"./UserPlaylist\"\n\nconst spotifyWebApi = new SpotifyWebApi();\n\n/*\n    --Display current username\n    --Fetch and display list of Categories\n    --Save user category choice\n    --Fetch category playlists\n    --Get top artists from each\n    --Save to list of artist\n        *insert similar artist into list\n    --Display list of artists\n*/\n\nfunction SpotifyData() {\n    const [token, setToken] = useState(false) \n    const [currentUser, setCurrentUser] = useState()\n    const [availableCategories, setAvailableCategories] = useState([])\n    const [selectedCategory, setSelectedCategory] = useState(\"\")\n    const [categoryPlaylists, setCategoryPlaylists] = useState([])\n    const [featuredArtists, setFeaturedArtists] = useState([])\n    const [fetchingArtists, setFetchingArtists] = useState(true)\n    const [checkedArtists, setCheckedArtists] = useState([])\n    const [finalPlaylist, setFinalPlaylist] = useState()\n    const [playlistLink, setPlaylistLink] = useState({href: '', id: null})\n\n    function getMe() {\n        spotifyWebApi.getMe()\n            .then((response) => {\n                if (response) {\n                    setCurrentUser(response)\n                } \n        });\n    }\n\n    function getCategories() {\n        spotifyWebApi.getCategories()\n            .then((response) => {\n                if (response) {\n                    setAvailableCategories(response.categories.items)\n                } \n        });\n    }\n    \n    function getCategory(id) {\n        spotifyWebApi.getCategory(id)\n            .then((response) => {\n                setSelectedCategory(response.name);\n                getCategoryPlaylists(response.id);\n        });\n    }\n\n    function getCategoryPlaylists(id) {\n        spotifyWebApi.getCategoryPlaylists(id)\n            .then((response) => {\n                setCategoryPlaylists(response.playlists.items);\n        });\n    }\n\n    // Overwrite featuredArtist array with full artist info\n    function getArtistImage(id, index) {\n        spotifyWebApi.getArtist(id)\n            .then((response) => {\n                setFeaturedArtists((prevArray) => {\n                    let updatedList = [...prevArray]\n                    updatedList[index] = response\n\n                    return updatedList\n                })\n        });\n    }\n\n    function getPlaylistTracks(id) {\n        const lim = 5;\n\n        spotifyWebApi.getPlaylistTracks(id, {limit: lim}) // Only get 5 songs\n            .then((response) => {\n                let startingTracks = response.items;\n\n                for (let i = 0; i < lim; i++) {\n                    let thisArtist = startingTracks[i].track.artists[0];\n\n                    setFeaturedArtists((prevArray) => {\n                        // Skip if this artist already was saved\n                        for (let i = 0, l = prevArray.length; i < l; i++) {\n                            if (`${prevArray[i].id}` === `${thisArtist.id}`) {\n                                return prevArray\n                            }\n                        }\n                       \n                        // Make a boolean array of the same length\n                        setCheckedArtists((prevArray) => [...prevArray, false])\n                        let updatedList = [...prevArray, {id: thisArtist.id}]\n                        return updatedList\n                    })\n                }\n                setFetchingArtists(false)\n        });\n    }\n\n    function saveToken(token) {\n        spotifyWebApi.setAccessToken(token);\n        setToken(token);\n    }\n    \n    // Abstract the image fetching interations\n    function fetchProfiles() {\n        if (featuredArtists.length > 0) {\n            for (let i = 0, l = featuredArtists.length; i < l; i++) {\n                getArtistImage(featuredArtists[i].id, i)\n            }\n            setFetchingArtists(true)\n        }\n    }\n\n    function clickCategoryCard(id) {\n        getCategory(id)\n    }\n    \n    // Toggle function for card elements\n    function clickArtist(index) {\n        setCheckedArtists((prevArray) => {\n            let newArray = [...prevArray]\n            newArray[index] = !prevArray[index]\n            return newArray\n        })\n    }\n\n    function getPlaylistLink() {\n        // Use final list\n\n        spotifyWebApi.createPlaylist(currentUser.id, {\n            \"name\": \"Top Songs\",\n            \"description\": \"Top songs from your favorite artists. Created with a Spotify React app made by @SpencerLepine\",\n            \"public\": false\n        })\n        .then((response) => {\n            setPlaylistLink({href: `https://open.spotify.com/playlist/${response.id}`, id: response.id}) // response.href\n            //playlistId = \n        })\n    }\n\n    function submitSelectedArtist() {\n        // Iterate through and select CHECKED artists\n        const finalList = checkedArtists.map((artist, index) => {\n            if (artist) {\n                return featuredArtists[index]\n            }\n        }).filter(artist => artist);\n\n        //Reset the list\n        setCheckedArtists([])\n        setFeaturedArtists([])\n        setAvailableCategories([])\n\n        getPlaylistLink()\n\n        setFinalPlaylist(finalList);\n    }\n\n    // Once the playlist is created, go through an write the songs to it\n    useEffect(() => {\n        if (typeof playlistLink.id === 'string') {\n            for (let i = 0, l = finalPlaylist.length; i < l; i++) {\n                spotifyWebApi.getArtistTopTracks(finalPlaylist[i].id, \"US\")\n                    .then((response) => {\n                        let tracks = response.tracks.map((track) => track.uri)\n                        if (tracks.length > 0) {\n                            spotifyWebApi.addTracksToPlaylist(playlistLink.id, tracks)\n                            .catch(reject => console.log(`${finalPlaylist[i].name} - ${reject.JSON} - ${i}`))\n                        } else {\n                            console.log(`Artist: ${finalPlaylist[i].id} did not cooperate`)\n                        }\n                    })\n                setTimeout(100) // Don't call the API so quickly\n            }\n\n            console.log(`Up to ${finalPlaylist.length*10} songs were added to your playlist`)\n            return\n        }\n    }, [playlistLink])\n\n    // Go through the playlists of the selected category ONCE\n    useEffect(() => {\n        if (categoryPlaylists.length > 0) {\n            for (let i = 0, l = categoryPlaylists.length; i < l; i++) {\n                getPlaylistTracks(categoryPlaylists[i].id)\n            }\n            return\n        }\n    }, [categoryPlaylists])\n\n    // Use fresh artist data to get their profile images\n    useEffect(() => {\n        if (!fetchingArtists) {\n            fetchProfiles();\n            return\n        }\n    }, [featuredArtists])\n\n    // Start fetching data once the key is found ONCE\n    useEffect(() => {\n        if (token) {\n            getMe()\n            getCategories()\n            return\n        }\n    }, [token])\n\n    return (\n        <>\n            {!token && <LoginButton saveToken={saveToken} />}\n            \n            {token &&\n            <SpotifyDataComponent \n                clickArtist={clickArtist}\n                submitSelectedArtist={submitSelectedArtist}\n                clickCategoryCard={clickCategoryCard}\n                currentUser={currentUser}\n                availableCategories={availableCategories}\n                selectedCategory={selectedCategory}\n                categoryPlaylists={categoryPlaylists}\n                featuredArtists={featuredArtists}\n                checkedArtists={checkedArtists}\n            />}\n\n            {finalPlaylist && <UserPlaylist finalPlaylist={finalPlaylist} playlistLink={playlistLink.href} />}\n        </>\n    )\n}\n\nexport default SpotifyData\n","/Users/notspencer/Documents/React Practice/client/src/components/SpotifyDataComponent.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":2,"column":8,"nodeType":"131","messageId":"132","endLine":2,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":136,"column":62,"nodeType":"135","messageId":"136","endLine":136,"endColumn":64},{"ruleId":"137","severity":1,"message":"138","line":168,"column":8,"nodeType":"139","endLine":168,"endColumn":25,"suggestions":"140"},{"ruleId":"141","severity":1,"message":"142","line":7,"column":17,"nodeType":"143","endLine":7,"endColumn":93},{"ruleId":"141","severity":1,"message":"142","line":10,"column":31,"nodeType":"143","endLine":10,"endColumn":91},{"ruleId":"141","severity":1,"message":"142","line":11,"column":17,"nodeType":"143","endLine":11,"endColumn":77},{"ruleId":"137","severity":1,"message":"144","line":16,"column":8,"nodeType":"139","endLine":16,"endColumn":10,"suggestions":"145"},{"ruleId":"125","replacedBy":"146"},{"ruleId":"127","replacedBy":"147"},{"ruleId":"137","severity":1,"message":"144","line":17,"column":8,"nodeType":"139","endLine":17,"endColumn":10,"suggestions":"148"},{"ruleId":"133","severity":1,"message":"134","line":150,"column":62,"nodeType":"135","messageId":"136","endLine":150,"endColumn":64},{"ruleId":"137","severity":1,"message":"149","line":186,"column":8,"nodeType":"139","endLine":186,"endColumn":22,"suggestions":"150"},{"ruleId":"137","severity":1,"message":"138","line":204,"column":8,"nodeType":"139","endLine":204,"endColumn":25,"suggestions":"151"},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchProfiles' and 'fetchingArtists'. Either include them or remove the dependency array.","ArrayExpression",["154"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["155"],["152"],["153"],["156"],"React Hook useEffect has a missing dependency: 'finalPlaylist'. Either include it or remove the dependency array.",["157"],["158"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"161","fix":"163"},{"desc":"164","fix":"165"},{"desc":"159","fix":"166"},"Update the dependencies array to be: [featuredArtists, fetchProfiles, fetchingArtists]",{"range":"167","text":"168"},"Update the dependencies array to be: [props]",{"range":"169","text":"170"},{"range":"171","text":"170"},"Update the dependencies array to be: [finalPlaylist, playlistLink]",{"range":"172","text":"173"},{"range":"174","text":"168"},[5425,5442],"[featuredArtists, fetchProfiles, fetchingArtists]",[483,485],"[props]",[523,525],[6392,6406],"[finalPlaylist, playlistLink]",[6916,6933]]